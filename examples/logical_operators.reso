def main() -> i32:
    println("=== Logical Operators in Reso ===")
    println("Note: Logical operators work only with boolean values")
    
    # Basic Logical Operations
    println("=== Basic Logical Operations ===")
    
    var true_val: bool = true
    var false_val: bool = false
    
    println("true_val = ".append(true_val.to_string()))
    println("false_val = ".append(false_val.to_string()))
    
    # Logical AND (and)
    var and_true_true = true_val and true_val       # true and true = true
    var and_true_false = true_val and false_val     # true and false = false
    var and_false_true = false_val and true_val     # false and true = false
    var and_false_false = false_val and false_val   # false and false = false
    
    println("=== Logical AND (and) ===")
    println("true and true = ".append(and_true_true.to_string()))
    println("true and false = ".append(and_true_false.to_string()))
    println("false and true = ".append(and_false_true.to_string()))
    println("false and false = ".append(and_false_false.to_string()))
    
    # Logical OR (or)
    var or_true_true = true_val or true_val         # true or true = true
    var or_true_false = true_val or false_val       # true or false = true
    var or_false_true = false_val or true_val       # false or true = true
    var or_false_false = false_val or false_val     # false or false = false
    
    println("=== Logical OR (or) ===")
    println("true or true = ".append(or_true_true.to_string()))
    println("true or false = ".append(or_true_false.to_string()))
    println("false or true = ".append(or_false_true.to_string()))
    println("false or false = ".append(or_false_false.to_string()))
    
    # Logical NOT (not) - Unary operator
    var not_true = not true_val                     # not true = false
    var not_false = not false_val                   # not false = true
    
    println("=== Logical NOT (not) ===")
    println("not true = ".append(not_true.to_string()))
    println("not false = ".append(not_false.to_string()))